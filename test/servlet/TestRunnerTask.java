// modified example code from
// >> http://javabeat.net/asynchronous-servlet-servlet-3-0/
// accessed on Sep 22, 2016
package test.servlet;

import java.io.*;
import java.text.SimpleDateFormat;
import java.util.*;

import java.sql.Connection;
import javax.sql.DataSource;
import javax.naming.InitialContext;
import javax.naming.Context;

import javax.servlet.ServletException;
import javax.servlet.AsyncContext;
import javax.servlet.ServletOutputStream;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

import org.testng.xml.XmlClass;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

import tputil.*;

import test.TPServletListener;
import test.RunTest;
import test.ChemRxnTest;

public class TestRunnerTask implements Runnable  {

    /**
     * serialVersion UID generated by compiler
     */
    private static final long serialVersionUID = 5236105978614337173L;
    private AsyncContext aCtx;

    public static Connection getConnection() {
        Connection conn = null;
        try {
            // Obtain our environment naming context
            Context initCtx = new InitialContext();
            Context envCtx = (Context) initCtx.lookup("java:comp/env");

            // Look up our data source
            DataSource ds = (DataSource) envCtx.lookup("jdbc/ChemTestDB");
            conn = ds.getConnection();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return conn;
    }

    public TestRunnerTask(AsyncContext aCtx_in) {
        aCtx = aCtx_in;
    }

    @Override
    public void run() {
        ServletOutputStream srvout = null;
        try {
            ServletRequest req = aCtx.getRequest();
            ServletResponse resp = aCtx.getResponse();

            String run_pct = req.getParameter("runpct");
            String fail_pct = req.getParameter("failpct");

            srvout = resp.getOutputStream();
            TPServletListener tpsl = new TPServletListener(srvout);

            // for called test class(es). May be removed or replaced with
            // different RunTest methods
            System.setProperty("tptest.wcprop",
                    "/var/lib/tomcat7/webcli.props");
            System.setProperty("tptest.dbprop", "/var/lib/tomcat7/db.props");
            RunTest rt = new RunTest(tpsl);

            String client = req.getRemoteHost();
            if (client == null || client.equals("")) {
                client = req.getRemoteAddr();
            }
            if (client.matches("^[1-9].+")) {
                client = client.substring(0, client.indexOf(".", 4) + 1);
                client += "~.~";
                System.out.println(client);
            }

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd-HH_mm-ss");
            Date now = new Date();
            String curtestdir = sdf.format(now);
            curtestdir = client + "_" + curtestdir;
            XmlSuite curxml = new XmlSuite();
            XmlTest curtest = new XmlTest();
            curtest.addParameter("run_pct", run_pct);
            curtest.addParameter("fail_pct", fail_pct);
            curtest.addParameter("servletCalled", "true");
            HashMap<String, String> suiteMetaDataMap =
                    new HashMap<String, String>();
            curtest.setClasses(Arrays.asList(new XmlClass(ChemRxnTest.class)));

            EasyFileReader ezr =
                    new EasyFileReader("/var/www/browser-info.txt");
            // because the suite name is used as part of a Javascript function
            // name in the HTML results, it cannot have '-'s or '.'s. Only '_'s
            String browserinfo = ezr.readLine().trim().replace(' ', '_');
            ezr.close();

            String suite_name = "_" + fail_pct + "pct_fail";
            if (fail_pct.equals("0")) {
                suite_name = "_all_pass";
            }
            String osname = EasyOS.osname;
            String osver = EasyOS.osver;
            String brname = "Firefox";
            if (browserinfo.contains("Chrome")) {
                brname = "Chrome";
            }
            suite_name = brname + "_OS_" + osname + suite_name;
            suite_name = suite_name.replace('-', '_');
            suite_name = suite_name.replace('.', '_');
            suite_name = suite_name.replace(' ', '_');
            curxml.setName(suite_name);
            rt.setDefaultSuiteName(curxml.getName());
            curtest.setName("test.ChemRxnTest " + browserinfo + ", OS " +
                    osname + " ver " + osver);
            curtest.setSuite(curxml);
            curxml.setTests(Arrays.asList(curtest));
            curxml.setParameters(suiteMetaDataMap);
            rt.setXmlSuites(Arrays.asList(curxml));

            rt.setOutputDirectory("/var/www/testlogs/" + curtestdir);

            rt.run();

            //aCtx.dispatch();
            aCtx.complete();
            Thread.currentThread().interrupt();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try { srvout.close(); } catch (Exception e2) {}
        }
    }

}
